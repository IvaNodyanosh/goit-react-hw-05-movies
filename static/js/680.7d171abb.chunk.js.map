{"version":3,"file":"static/js/680.7d171abb.chunk.js","mappings":"wMAEQA,EAAiBC,EAAAA,EAAAA,QAARC,EAAQD,EAAAA,EAAAA,IAMzB,EAJuB,SAAAE,GACrB,OAAOC,MAAM,GAADC,OAAIL,EAAO,UAAAK,OAASF,EAAE,qBAAAE,OAAoBH,GACxD,E,2BC0CA,EA3CgB,WACd,IAAAI,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAoCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GACxBG,GAAYC,EAAAA,EAAAA,MAAZD,QAsBR,OApBAE,EAAAA,EAAAA,YAAU,WACRH,EAAc,WACdI,EAAeH,GACZI,MAAK,SAAAC,GACJ,GAAKA,EAASC,GAGZ,OAAOD,EAASE,OAFhB,MAAM,IAAIC,MAAMH,EAASI,OAI7B,IACCL,MAAK,SAAAM,GACJf,EAAWe,EAAKC,SAChBZ,EAAc,KAChB,IACCa,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdd,EAAc,QAChB,GACJ,GAAG,CAACC,KAGFe,EAAAA,EAAAA,KAAA,MAAAC,SACkB,OAAflB,GAA0C,IAAnBJ,EAAQuB,OAC9BvB,EAAQwB,KAAI,SAAAC,GACV,OACEC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKG,EAAOE,UACZN,EAAAA,EAAAA,KAAA,KAAAC,SAAIG,EAAOG,YAFJH,EAAOhC,GAKpB,KAEA4B,EAAAA,EAAAA,KAAA,KAAAC,SAAG,8CAIX,C,mBCzCA,IALsB,CACpBhC,QAAS,gCACTE,IAAK,mC","sources":["components/api/function/getReviewsFilm.js","components/Reviews.jsx","components/api/parametersApi.js"],"sourcesContent":["import parametersApi from '../parametersApi';\n\nconst { baseUrl, key } = parametersApi;\n\nconst getReviewsFilm = id => {\n  return fetch(`${baseUrl}movie/${id}/reviews?api_key=${key}`);\n};\n\nexport default getReviewsFilm;\n","import getReviewsFilm from './api/function/getReviewsFilm';\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [dataStatus, setDataStatus] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setDataStatus('loading');\n    getReviewsFilm(movieId)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        } else {\n          return response.json();\n        }\n      })\n      .then(data => {\n        setReviews(data.results);\n        setDataStatus('ok');\n      })\n      .catch(error => {\n        console.error(error);\n        setDataStatus('error');\n      });\n  }, [movieId]);\n\n  return (\n    <ul>\n      {dataStatus === 'ok' && reviews.length !== 0 ? (\n        reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","const parametersApi = {\n  baseUrl: 'https://api.themoviedb.org/3/',\n  key: '5071804c0f5e4405f730996569c44316',\n};\n\nexport default parametersApi;\n"],"names":["baseUrl","parametersApi","key","id","fetch","concat","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","dataStatus","setDataStatus","movieId","useParams","useEffect","getReviewsFilm","then","response","ok","json","Error","status","data","results","catch","error","console","_jsx","children","length","map","review","_jsxs","author","content"],"sourceRoot":""}